{"version":3,"file":"static/js/687.5931c31d.chunk.js","mappings":"+LACA,EAAmC,wCAAnC,EAAmG,6CAAnG,EAA0J,+BAA1J,EAAqM,iCAArM,EAAkP,iC,SCG3O,SAASA,EAAT,GAQH,IAPFC,EAOC,EAPDA,GACAC,EAMC,EANDA,MACAC,EAKC,EALDA,YACAC,EAIC,EAJDA,SACAC,EAGC,EAHDA,aAIMC,GADL,EAFDC,aAEC,EADDC,QAEiBC,EAAAA,EAAAA,OACXC,EAAc,IAAIC,KAAKN,GAE7B,OACE,eAAaO,UAAWC,EAAxB,UACE,UAAC,KAAD,CACEC,GAAE,kBAAab,GACfc,MAAO,CAAEC,KAAMV,GACfM,UAAWC,EAHb,WAKE,gBACED,UAAWC,EACXI,IACEd,EAAW,yCAC2BA,GAClC,IAAIe,IAAI,aAEdC,IAAKjB,EACL,YAAW,WAEb,4BACE,eAAIU,UAAWC,EAAf,SAA+BX,KAC/B,uBAAIE,KACJ,cAAGQ,UAAWC,EAAd,SAA8BH,EAAYU,8BAnBvCnB,EAwBZ,C,uJCxCD,EAA+B,iCAA/B,EAA4E,8BAA5E,EAA2H,mCAA3H,EAA6K,iC,SCGtK,SAASoB,EAAT,GAA8C,IAAjBC,EAAgB,EAAhBA,aAClC,OACE,eAAIV,UAAWC,EAAf,SACGS,EAAaC,KAAI,gBAAGtB,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOG,EAAd,EAAcA,aAAcmB,EAA5B,EAA4BA,KAAMrB,EAAlC,EAAkCA,YAAlC,OAChB,SAACH,EAAA,EAAD,CAEEC,GAAIA,EACJI,aAAcA,EACdH,MAAOA,EACPsB,KAAMA,EACNrB,YAAaA,GALRF,EAFS,KAYvB,CCbc,SAASwB,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAEA,GAAwCF,EAAAA,EAAAA,UAAS,IAAjD,eAAOJ,EAAP,KAAqBO,EAArB,KACA,GAAsCC,EAAAA,EAAAA,MAAtC,eAAOC,EAAP,KAAoBC,EAApB,KAEMC,EAAaF,EAAYG,IAAI,UAAY,IAE/CC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAIA,IAAMG,EAAW,mCAAG,+FACZC,EAAAA,EAAAA,IAAkBJ,GACrBK,MAAK,SAAAC,GACJ,KAAIA,EAAKC,QAAQC,OAAS,GAI1B,MAAMC,QAHJb,EAAgBU,EAAKC,QAIxB,IACAG,OAAM,SAAAC,GACLC,MAAM,mBACNC,QAAQC,IAAIH,EAAMI,QACnB,IAZe,2CAAH,qDAcjBZ,GAhBC,CAiBF,GAAE,CAACH,IAmBJ,OACE,iCACE,kBAAMrB,UAAWC,EAAeoC,SAff,SAAAC,GACnBA,EAAMC,iBACNnB,EAAeL,GAEA,KAAXA,GAKJK,EAAe,CAAEoB,MAAOzB,IACxBC,EAAU,KALRiB,MAAM,mCAMT,EAIG,WACE,kBACEjC,UAAWC,EACXwC,SAtBa,SAAAH,GACnBtB,EAAUsB,EAAMI,OAAOC,MACxB,EAqBOA,MAAO5B,EACP6B,YAAY,sBAEd,mBAAQ5C,UAAWC,EAAkB4C,KAAK,SAA1C,uBAIDnC,IAAgB,SAACD,EAAD,CAAmBC,aAAcA,MAGvD,C,sNClEKoC,EAAW,gCACXC,EAAM,mC,SAIGC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,6GAA2BC,EAA3B,+BAAiC,GAAIC,EAArC,+BAA8C,CAAC,EAA/C,SACyBC,EAAAA,EAAAA,IAAUF,EAAKC,GADxC,uBACUvB,EADV,EACUA,KADV,kBAESA,GAFT,mEAKO,SAASyB,IACd,OAAOJ,EAAY,GAAD,OAAIF,EAAJ,uCAA2CC,GAC9D,CAIM,SAAStB,EAAkBe,GAChC,OAAOQ,EAAY,GAAD,OACbF,EADa,gCACmBC,EADnB,kBACgCP,EADhC,uCAGnB,CAEM,SAASa,EAAgBC,GAC9B,OAAON,EAAY,GAAD,OACbF,EADa,iBACIQ,EADJ,oBACwBP,EADxB,mBAGnB,CAGM,SAASQ,EAAgBD,GAC9B,OAAON,EAAY,GAAD,OACbF,EADa,iBACIQ,EADJ,4BACgCP,EADhC,mBAGnB,CAEM,SAASS,EAAgBF,GAC9B,OAAON,EAAY,GAAD,OACbF,EADa,iBACIQ,EADJ,4BACgCP,EADhC,mBAGnB,CAEDtB,EAAkBgC,UAAY,CAC5BjB,MAAOkB,IAAAA,OAAAA,YAGTL,EAAgBI,UAAY,CAC1BH,SAAUI,IAAAA,OAAAA,YAGZF,EAAgBC,UAAY,CAC1BH,SAAUI,IAAAA,OAAAA,YAGZH,EAAgBE,UAAY,CAC1BH,SAAUI,IAAAA,OAAAA,W","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieItemCard/MovieItemCard.module.css?d96b","components/MovieItemCard/MovieItemCard.jsx","webpack://goit-react-hw-05-movies/./src/pages/MoviesPage/MoviesPage.module.css?7ea7","components/MoviePageCardList.jsx","pages/MoviesPage/MoviesPage.jsx","services/Api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"MovieGalleryItem\":\"MovieItemCard_MovieGalleryItem__d6IbL\",\"MovieGalleryItemImage\":\"MovieItemCard_MovieGalleryItemImage__5zyyz\",\"NavLink\":\"MovieItemCard_NavLink__UARma\",\"MovieName\":\"MovieItemCard_MovieName__LoRah\",\"MovieDate\":\"MovieItemCard_MovieDate__K5tm0\",\"MoviList\":\"MovieItemCard_MoviList__ScBNZ\"};","import PropTypes from 'prop-types';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport css from '../MovieItemCard/MovieItemCard.module.css';\n\nexport function MovieItemCard({\n  id,\n  title,\n  poster_path,\n  overview,\n  release_date,\n  vote_average,\n  genres,\n}) {\n  const location = useLocation();\n  const releaseData = new Date(release_date);\n\n  return (\n    <li key={id} className={css.MovieGalleryItem}>\n      <NavLink\n        to={`/movies/${id}`}\n        state={{ from: location }}\n        className={css.NavLink}\n      >\n        <img\n          className={css.MovieGalleryItemImage}\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500${poster_path}`\n              : new URL('../../images/image_not_available.png', import.meta.url)\n          }\n          alt={title}\n          min-width={'100px'}\n        />\n        <div>\n          <h2 className={css.MovieName}>{title}</h2>\n          <p>{overview}</p>\n          <p className={css.MovieDate}>{releaseData.toLocaleDateString()}</p>\n        </div>\n      </NavLink>\n    </li>\n  );\n}\n\nMovieItemCard.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  poster_path: PropTypes.string,\n  overview: PropTypes.string,\n  release_date: PropTypes.string,\n  vote_average: PropTypes.number,\n  genres: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"MovieGallery\":\"MoviesPage_MovieGallery__tBz9x\",\"MovieForm\":\"MoviesPage_MovieForm__SmQdu\",\"MovieFormInput\":\"MoviesPage_MovieFormInput__j65TK\",\"MovieFormBtn\":\"MoviesPage_MovieFormBtn__ORDo7\"};","import PropTypes from 'prop-types';\nimport { MovieItemCard } from './MovieItemCard/MovieItemCard';\nimport css from '../pages/MoviesPage/MoviesPage.module.css';\n\nexport function MoviePageCardList({ searchMovies }) {\n  return (\n    <ul className={css.MovieGallery}>\n      {searchMovies.map(({ id, title, release_date, name, poster_path }) => (\n        <MovieItemCard\n          key={id}\n          id={id}\n          release_date={release_date}\n          title={title}\n          name={name}\n          poster_path={poster_path}\n        />\n      ))}\n    </ul>\n  );\n}\n\nMoviePageCardList.propTypes = {\n  searchMovies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n      poster_path: PropTypes.string,\n    })\n  ),\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchedMovies } from '../../services/Api';\nimport { MoviePageCardList } from '../../components/MoviePageCardList';\nimport css from '../MoviesPage/MoviesPage.module.css';\n\nexport default function MoviesPage() {\n  const [search, setSearch] = useState('');\n\n  const [searchMovies, setSearchMovies] = useState([]);\n  const [searchParam, setSearchParam] = useSearchParams();\n\n  const movieQuery = searchParam.get('query') || '';\n\n  useEffect(() => {\n    if (!movieQuery) {\n      return;\n    }\n\n    const searchMovie = async () => {\n      await getSearchedMovies(movieQuery)\n        .then(data => {\n          if (data.results.length > 0) {\n            setSearchMovies(data.results);\n            return;\n          }\n          throw Error();\n        })\n        .catch(error => {\n          alert('Movie not found');\n          console.log(error.message);\n        });\n    };\n    searchMovie();\n  }, [movieQuery]);\n\n  const handleSearch = event => {\n    setSearch(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearchParam(search);\n\n    if (search === '') {\n      alert('Enter your search request please');\n      return;\n    }\n\n    setSearchParam({ query: search });\n    setSearch('');\n  };\n\n  return (\n    <>\n      <form className={css.MovieForm} onSubmit={handleSubmit}>\n        <input\n          className={css.MovieFormInput}\n          onChange={handleSearch}\n          value={search}\n          placeholder=\"Search movies...\"\n        />\n        <button className={css.MovieFormBtn} type=\"submit\">\n          Search\n        </button>\n      </form>\n      {searchMovies && <MoviePageCardList searchMovies={searchMovies} />}\n    </>\n  );\n}\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = 'e32f5431d23ebe7deb7fe030b4ef583a';\n\n// https://api.themoviedb.org/3/movie/550?api_key=e32f5431d23ebe7deb7fe030b4ef583a\n\nasync function fetchMovies(url = '', config = {}) {\n  const { data } = await axios.get(url, config);\n  return data;\n}\n\nexport function getTrendMovies() {\n  return fetchMovies(`${BASE_URL}/trending/movie/day?api_key=${KEY}`);\n}\n\n// console.log(getTrendMovies());\n\nexport function getSearchedMovies(query) {\n  return fetchMovies(\n    `${BASE_URL}search/movie?api_key=${KEY}&query=${query}&language=en-US&include_adult=false`\n  );\n}\n\nexport function getMovieDetails(movie_id) {\n  return fetchMovies(\n    `${BASE_URL}movie/${movie_id}?api_key=${KEY}&language=en-US`\n  );\n}\n// console.log(getMovieDetails(640146));\n\nexport function getMovieCredits(movie_id) {\n  return fetchMovies(\n    `${BASE_URL}movie/${movie_id}/credits?api_key=${KEY}&language=en-US`\n  );\n}\n\nexport function getMovieReviews(movie_id) {\n  return fetchMovies(\n    `${BASE_URL}movie/${movie_id}/reviews?api_key=${KEY}&language=en-US`\n  );\n}\n\ngetSearchedMovies.propTypes = {\n  query: PropTypes.string.isRequired,\n};\n\ngetMovieDetails.propTypes = {\n  movie_id: PropTypes.number.isRequired,\n};\n\ngetMovieReviews.propTypes = {\n  movie_id: PropTypes.number.isRequired,\n};\n\ngetMovieCredits.propTypes = {\n  movie_id: PropTypes.number.isRequired,\n};\n"],"names":["MovieItemCard","id","title","poster_path","overview","release_date","location","vote_average","genres","useLocation","releaseData","Date","className","css","to","state","from","src","URL","alt","toLocaleDateString","MoviePageCardList","searchMovies","map","name","MoviesPage","useState","search","setSearch","setSearchMovies","useSearchParams","searchParam","setSearchParam","movieQuery","get","useEffect","searchMovie","getSearchedMovies","then","data","results","length","Error","catch","error","alert","console","log","message","onSubmit","event","preventDefault","query","onChange","target","value","placeholder","type","BASE_URL","KEY","fetchMovies","url","config","axios","getTrendMovies","getMovieDetails","movie_id","getMovieCredits","getMovieReviews","propTypes","PropTypes"],"sourceRoot":""}