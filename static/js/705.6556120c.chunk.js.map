{"version":3,"file":"static/js/705.6556120c.chunk.js","mappings":"4MACA,GAAgB,UAAY,6B,oBCA5B,EAA+B,oC,SCGxB,SAASA,EAAT,GAAoC,IAAXC,EAAU,EAAVA,OAE9B,OADAC,QAAQC,IAAIF,IAEV,eAAIG,UAAWC,EAAf,SACGJ,EAAOK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAaC,EAA3B,EAA2BA,aAA3B,OACV,SAACC,EAAA,EAAD,CAEEJ,GAAIA,EACJG,aAAcA,EACdF,MAAOA,EACPC,YAAaA,GAJRF,EAFG,KAWjB,CCdc,SAASK,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOZ,EAAP,KAAea,EAAf,KAQA,OAPAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAiBC,MAAK,SAAAC,GACpBJ,EAAUI,EAAKC,SACfjB,QAAQC,IAAIe,EACb,GACF,GAAE,KAGD,oBAASd,UAAWC,EAAAA,QAApB,UACE,4BACE,eAAID,UAAWC,EAAAA,UAAf,6BACA,SAACL,EAAD,CAAeC,OAAQA,QAI9B,C,+ECrBD,EAAmC,wCAAnC,EAAmG,6CAAnG,EAA0J,+BAA1J,EAAqM,iCAArM,EAAkP,iC,SCG3O,SAASU,EAAT,GAQH,IAPFJ,EAOC,EAPDA,GACAC,EAMC,EANDA,MACAC,EAKC,EALDA,YACAW,EAIC,EAJDA,SACAV,EAGC,EAHDA,aAIMW,GADL,EAFDC,aAEC,EADDC,QAEiBC,EAAAA,EAAAA,OACXC,EAAc,IAAIC,KAAKhB,GAE7B,OACE,eAAaN,UAAWC,EAAxB,UACE,UAAC,KAAD,CACEsB,GAAE,kBAAapB,GACfqB,MAAO,CAAEC,KAAMR,GACfjB,UAAWC,EAHb,WAKE,gBACED,UAAWC,EACXyB,IACErB,EAAW,yCAC2BA,GAClC,IAAIsB,IAAI,aAEdC,IAAKxB,EACL,YAAW,WAEb,4BACE,eAAIJ,UAAWC,EAAf,SAA+BG,KAC/B,uBAAIY,KACJ,cAAGhB,UAAWC,EAAd,SAA8BoB,EAAYQ,8BAnBvC1B,EAwBZ,C,sNCtCK2B,EAAW,gCACXC,EAAM,mC,SAIGC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,6GAA2BC,EAA3B,+BAAiC,GAAIC,EAArC,+BAA8C,CAAC,EAA/C,SACyBC,EAAAA,EAAAA,IAAUF,EAAKC,GADxC,uBACUpB,EADV,EACUA,KADV,kBAESA,GAFT,mEAKO,SAASF,IACd,OAAOoB,EAAY,GAAD,OAAIF,EAAJ,uCAA2CC,GAC9D,CAIM,SAASK,EAAkBC,GAChC,OAAOL,EAAY,GAAD,OACbF,EADa,gCACmBC,EADnB,kBACgCM,EADhC,uCAGnB,CAEM,SAASC,EAAgBC,GAC9B,OAAOP,EAAY,GAAD,OACbF,EADa,iBACIS,EADJ,oBACwBR,EADxB,mBAGnB,CAGM,SAASS,EAAgBD,GAC9B,OAAOP,EAAY,GAAD,OACbF,EADa,iBACIS,EADJ,4BACgCR,EADhC,mBAGnB,CAEM,SAASU,EAAgBF,GAC9B,OAAOP,EAAY,GAAD,OACbF,EADa,iBACIS,EADJ,4BACgCR,EADhC,mBAGnB,CAEDK,EAAkBM,UAAY,CAC5BL,MAAOM,IAAAA,OAAAA,YAGTL,EAAgBI,UAAY,CAC1BH,SAAUI,IAAAA,OAAAA,YAGZF,EAAgBC,UAAY,CAC1BH,SAAUI,IAAAA,OAAAA,YAGZH,EAAgBE,UAAY,CAC1BH,SAAUI,IAAAA,OAAAA,W","sources":["webpack://goit-react-hw-05-movies/./src/pages/HomePage/HomePage.module.css?5baa","webpack://goit-react-hw-05-movies/./src/pages/MovieCardList/MovieCardList.module.css?237d","pages/MovieCardList/MovieCardList.jsx","pages/HomePage/HomePage.jsx","webpack://goit-react-hw-05-movies/./src/pages/MovieItemCard/MovieItemCard.module.css?bd7e","pages/MovieItemCard/MovieItemCard.jsx","services/Api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"MainTitle\":\"HomePage_MainTitle__ZlcRE\"};","// extracted by mini-css-extract-plugin\nexport default {\"MovieGallery\":\"MovieCardList_MovieGallery__1zYtY\"};","import PropTypes from 'prop-types';\nimport { MovieItemCard } from 'pages/MovieItemCard/MovieItemCard';\nimport css from './MovieCardList.module.css';\n\nexport function MovieCardList({ movies }) {\n  console.log(movies);\n  return (\n    <ul className={css.MovieGallery}>\n      {movies.map(({ id, title, poster_path, release_date }) => (\n        <MovieItemCard\n          key={id}\n          id={id}\n          release_date={release_date}\n          title={title}\n          poster_path={poster_path}\n        />\n      ))}\n    </ul>\n  );\n}\n\nMovieCardList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string.isRequired,\n      release_date: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport css from './HomePage.module.css';\nimport { getTrendMovies } from 'services/Api';\nimport { MovieCardList } from 'pages/MovieCardList/MovieCardList';\n\nexport default function HomePage() {\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    getTrendMovies().then(data => {\n      setMovies(data.results);\n      console.log(data);\n    });\n  }, []);\n\n  return (\n    <section className={css.Section}>\n      <div>\n        <h1 className={css.MainTitle}>Trending today</h1>\n        <MovieCardList movies={movies} />\n      </div>\n    </section>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"MovieGalleryItem\":\"MovieItemCard_MovieGalleryItem__3U65u\",\"MovieGalleryItemImage\":\"MovieItemCard_MovieGalleryItemImage__kO2Vt\",\"NavLink\":\"MovieItemCard_NavLink__+aI1t\",\"MovieName\":\"MovieItemCard_MovieName__ozUxu\",\"MovieDate\":\"MovieItemCard_MovieDate__J3YEC\",\"MoviList\":\"MovieItemCard_MoviList__J5D+K\"};","import PropTypes from 'prop-types';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport css from '../MovieItemCard/MovieItemCard.module.css';\n\nexport function MovieItemCard({\n  id,\n  title,\n  poster_path,\n  overview,\n  release_date,\n  vote_average,\n  genres,\n}) {\n  const location = useLocation();\n  const releaseData = new Date(release_date);\n\n  return (\n    <li key={id} className={css.MovieGalleryItem}>\n      <NavLink\n        to={`/movies/${id}`}\n        state={{ from: location }}\n        className={css.NavLink}\n      >\n        <img\n          className={css.MovieGalleryItemImage}\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500${poster_path}`\n              : new URL('../../images/image_not_available.png', import.meta.url)\n          }\n          alt={title}\n          min-width={'100px'}\n        />\n        <div>\n          <h2 className={css.MovieName}>{title}</h2>\n          <p>{overview}</p>\n          <p className={css.MovieDate}>{releaseData.toLocaleDateString()}</p>\n        </div>\n      </NavLink>\n    </li>\n  );\n}\n\nMovieItemCard.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  poster_path: PropTypes.string,\n  overview: PropTypes.string,\n  release_date: PropTypes.string,\n  vote_average: PropTypes.number,\n  genres: PropTypes.string,\n};\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = 'e32f5431d23ebe7deb7fe030b4ef583a';\n\n// https://api.themoviedb.org/3/movie/550?api_key=e32f5431d23ebe7deb7fe030b4ef583a\n\nasync function fetchMovies(url = '', config = {}) {\n  const { data } = await axios.get(url, config);\n  return data;\n}\n\nexport function getTrendMovies() {\n  return fetchMovies(`${BASE_URL}/trending/movie/day?api_key=${KEY}`);\n}\n\n// console.log(getTrendMovies());\n\nexport function getSearchedMovies(query) {\n  return fetchMovies(\n    `${BASE_URL}search/movie?api_key=${KEY}&query=${query}&language=en-US&include_adult=false`\n  );\n}\n\nexport function getMovieDetails(movie_id) {\n  return fetchMovies(\n    `${BASE_URL}movie/${movie_id}?api_key=${KEY}&language=en-US`\n  );\n}\n// console.log(getMovieDetails(640146));\n\nexport function getMovieCredits(movie_id) {\n  return fetchMovies(\n    `${BASE_URL}movie/${movie_id}/credits?api_key=${KEY}&language=en-US`\n  );\n}\n\nexport function getMovieReviews(movie_id) {\n  return fetchMovies(\n    `${BASE_URL}movie/${movie_id}/reviews?api_key=${KEY}&language=en-US`\n  );\n}\n\ngetSearchedMovies.propTypes = {\n  query: PropTypes.string.isRequired,\n};\n\ngetMovieDetails.propTypes = {\n  movie_id: PropTypes.number.isRequired,\n};\n\ngetMovieReviews.propTypes = {\n  movie_id: PropTypes.number.isRequired,\n};\n\ngetMovieCredits.propTypes = {\n  movie_id: PropTypes.number.isRequired,\n};\n"],"names":["MovieCardList","movies","console","log","className","css","map","id","title","poster_path","release_date","MovieItemCard","HomePage","useState","setMovies","useEffect","getTrendMovies","then","data","results","overview","location","vote_average","genres","useLocation","releaseData","Date","to","state","from","src","URL","alt","toLocaleDateString","BASE_URL","KEY","fetchMovies","url","config","axios","getSearchedMovies","query","getMovieDetails","movie_id","getMovieCredits","getMovieReviews","propTypes","PropTypes"],"sourceRoot":""}